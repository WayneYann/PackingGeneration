#############################################
## INPUT
#############################################

# diameter for inserted particles
variable d_p equal ##Particle_diameter##

# use radius of inserted particles here
variable gridSize equal ${d_p}/2

# number of inserted particles
variable nPart equal ##Particle_number##

# half side lenght of box
variable boxLengh equal ##Box_half_side##

# upper limit of box
variable boxTop equal 30.0

# lower boundary of insertion region
variable boxLow equal 0

# initalize sequence of random numbers
variable randomSeed equal 2146

# total simulation time (in s)
variable t_final equal 3600.0

# tempo di scrittura su file
variable timeWriteOut equal 0.5

# magnitudine minima
variable	vtresh equal ##Tresh_velocity##

#############################################
## EXTRA VARIABLES EVALUATION
#############################################

variable rho_p equal 2500
variable r_p equal ${d_p}/2

variable massFlowRate equal 5.77806880000000000000

variable E_p equal 100e6
variable nu_p equal 0.45
variable G_p equal ${E_p}/(2+2*${nu_p})

variable E_w equal ${E_p}
variable nu_w equal ${nu_p}

variable e_pp equal .2
variable e_pw equal ${e_pp}
variable e_wp equal ${e_pw}
variable e_ww equal 1.

variable muSF_pp equal .15 
variable muSF_pw equal ${muSF_pp}
variable muSF_wp equal ${muSF_pw}
variable muSF_ww equal 1.

variable dt equal PI*0.003*sqrt(${rho_p}/${G_p})/(.1631*${nu_p}+.8766)*.15
variable timeFrame equal .1

variable writeOutEvery equal round(${timeWriteOut}/${dt})
variable writeOutScreenInfoEvery equal round(${writeOutEvery}/2)
variable writeRestartEvery equal round(${writeOutEvery}*10)
variable checkStopCriterionEvery equal round(${writeOutEvery}/10)

variable	t_filling equal .1
variable	r_filling equal round(${t_filling}/${dt})
variable	r_final equal round(${t_final}/${dt})

#############################################
## RUN
#############################################
#Particle packing by insertion and successive growing of particles

atom_style	granular
atom_modify	map array
boundary	m m m
newton		off
echo		both

communicate	single vel yes

units		si

region		reg block -${boxLengh} ${boxLengh} -${boxLengh} ${boxLengh} 0. ${boxTop} units box
create_box	1 reg

neighbor	${gridSize} bin
neigh_modify	delay 0 binsize ${gridSize}


#Material properties required for new pair styles

fix 		m1 all property/global youngsModulus peratomtype ${E_p}
fix 		m2 all property/global poissonsRatio peratomtype ${nu_p}
fix 		m3 all property/global coefficientRestitution peratomtypepair 1 ${e_pp}
fix 		m4 all property/global coefficientFriction peratomtypepair 1 ${muSF_pp}

#New pair style
pair_style gran model hertz tangential history #Hertzian without cohesion
pair_coeff	* *

fix		gravi all gravity 9.81 vector 0. 0. -1.

fix xwalls1 all wall/gran model hertz tangential history primitive type 1 zcylinder ${boxLengh}  0. 0. 
fix zwalls1 all wall/gran model hertz tangential history primitive type 1 zplane  0.00
fix zwalls2 all wall/gran model hertz tangential history primitive type 1 zplane  ${boxTop}


#distributions for insertion
fix		pts1 all particletemplate/sphere ${randomSeed} atom_type 1 density constant ${rho_p} radius constant ${r_p} 
fix		pdd1 all particledistribution/discrete 1.  1 pts1 1.0

region	bc cylinder z  0. 0.  ${boxLengh} ${boxLow} ${boxTop} units box

#dump frequency, run times

fix	ins all insert/pack &
		seed ${randomSeed} &
		distributiontemplate pdd1 & 
		verbose no &
		insert_every once &
		overlapcheck yes &
		all_in yes &
		vel uniform 0. 0. -.5  0. 0. -0.1 &
		orientation random &
		region bc &
		particles_in_region ${nPart} &
		ntry_mc 200000

fix integr all nve/sphere
timestep ${dt}

compute breakcriterium all ke

#treshold of particle velocity - if velocity of all particles below treshold, calculation is finished
variable	step equal step

variable 	vxCOM equal "vcm(all,x)"
variable 	vyCOM equal "vcm(all,y)"
variable 	vzCOM equal "vcm(all,z)"

# Abort criterions

variable	vmag atom sqrt(vx*vx+vy*vy+vz*vz)
compute		vmax all reduce max v_vmag
variable	vMagMax equal c_vmax

#output settings, include total thermal energy
fix			checkTimestep all check/timestep/gran ${writeOutScreenInfoEvery} 0.15 0.15
compute		1 all erotate/sphere
variable	time equal step*${dt}
thermo_style	custom step v_time atoms ke c_1 vol v_vMagMax
thermo		${writeOutScreenInfoEvery}
thermo_modify	lost ignore norm no
compute_modify	thermo_temp dynamic yes


#insert the first particles so that dump is not empty
run		1

dump 	dmp all custom ${writeOutEvery} post/spheres.*.dump radius x y z

#run with criterion to end if all particles below treshold velocity or if r_final steps are run
run		${r_final} every ${checkStopCriterionEvery}  "if '${vMagMax} < ${vtresh}' then 'quit'"


